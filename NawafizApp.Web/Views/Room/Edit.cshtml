@model NawafizApp.Services.Dtos.RoomDto

@using NawafizApp.Web.Helper

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout-hoster.cshtml";
}

<h2>Edit</h2>
<div class="portlet box yellow">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>إضافة غرفة
        </div>
    </div>
    <div class="portlet-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>RoomDto</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomNum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RoomNum, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RoomNum, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomDirection, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RoomDirection, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RoomDirection, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group ">
                    @Html.Label("الكتلة الفندقية ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div class="input-group select2-bootstrap-prepend" style="width:auto">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button" data-select2-open="single-prepend-text">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                            <select id="single-prepend-text" name="hid" class="form-control select2 select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                                <option></option>
                                @foreach (var item in SelectLists.getAllblock(null))
                                {
                                    if (!string.IsNullOrWhiteSpace(item.Value) && Model.HotelBlock_id != null && Model.HotelBlock_id.ToString() == item.Value)
                                    {
                                <option value="@item.Value" selected="true">@item.Text</option>
                                    }
                                    else
                                    {
                                <option value="@item.Value">@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group ">
                    @Html.Label("Room Type ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div class="input-group select2-bootstrap-prepend" style="width:auto">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button" data-select2-open="single-prepend-text">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                            <select id="single-prepend-text" name="tid" class="form-control select2 select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                                <option></option>
                                @foreach (var item in SelectLists.getromeType(null))
                                {
                                    if (!string.IsNullOrWhiteSpace(item.Value) && Model.RoomType_id != null && Model.RoomType_id.ToString() == item.Value)
                                    {
                                        <option value="@item.Value" selected="true">@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
            

                <div class="form-group">
                    @Html.LabelFor(model => model.Isbusy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Isbusy)
                            @Html.ValidationMessageFor(model => model.Isbusy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsNeedfix, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsNeedfix)
                            @Html.ValidationMessageFor(model => model.IsNeedfix, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isneedclean, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isneedclean)
                            @Html.ValidationMessageFor(model => model.isneedclean, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsInService, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsInService)
                            @Html.ValidationMessageFor(model => model.IsInService, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "getAllRoom")
        </div>


</div>